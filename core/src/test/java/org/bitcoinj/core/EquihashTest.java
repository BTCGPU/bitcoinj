package org.bitcoinj.core;

import org.bitcoinj.params.MainNetParams;
import org.bitcoinj.params.RegTestParams;
import org.bitcoinj.params.TestNet3Params;
import org.junit.Test;

import javax.xml.bind.DatatypeConverter;

import static org.junit.Assert.assertTrue;


public class EquihashTest {
    private static final NetworkParameters TESTNET = TestNet3Params.get();
    private static final NetworkParameters REGTEST = RegTestParams.get();
    private static final NetworkParameters MAINNET = MainNetParams.get();

    @Test
    public void serializeBlockGold_afterEquihashFork_Testnet() throws Exception {
        // Arrange
        // TODO Spas Use
        String hex = "000000202ee33f8434abb3b5874360c8ff21ae6095333440809cdbd258ef18cd0ec60200f30faecfb730de167ab9205b9445d311626294bd357af08952f758011e912b0978390000000000000000000000000000000000000000000000000000000000006c652a5b6e12031f3dcbc9e40000501d5d4e0b000000000000000000000000000000000000000000641773e3fe8df4c994e84cc9bfe182e60cbab992ac1f9dba6ba33560b2cc60df6b2daa3f4eaf23aa596d4adea5343ca57007701ce77910dca21afbb6bf0c1be3b569536aa9217980b6eb1b235277b068c906a3b01e9fb5ce66c7533be7ccb62401c7a8425b03010000000001010000000000000000000000000000000000000000000000000000000000000000ffffffff31027839005a2d4e4f4d50212068747470733a2f2f6769746875622e636f6d2f6a6f7368756179616275742f7a2d6e6f6d70ffffffff0399a80b27010000001976a91452d96e6fd448b7854be4ad7b0951f1aeab35aa7688ac30f2fa02000000001976a9141e0c9f2699c061035de67d3c69a4ec4726bbe07988ac0000000000000000266a24aa21a9ed3c17c4e849d18076a6c4d84b5c24341b13d083f7b544a86de1bae069ea4d9a900120000000000000000000000000000000000000000000000000000000000000000000000000020000000222c160cb5fb7ff13351da2fdb9df4dc4fb85622156bc0d5fbfda3dca772eba6b000000006b483045022100b9b9476eb9253e7e016fa77d18e1d60564463dfc7bc50dfc71dd4a549d2dd53b0220302f6ef43ed4deb8fa905285ad4d55e01c9fe933ce666fd41e4651b0cb45ef1a4121021460a24384bbfac33bad5aaebf3f4d8c0a74d199fad5bb834e2acd1de31fd82afeffffffe7488c66c838957efad91c9b6ac558afe995a9e1b1efe56d8cbe19151f6fd183000000006b483045022100d422a335b2c39ca62f9df7bae5b863ee171db6f4227701a6ff4e56a644ef3d4002207e0dda190600f6ce63273a8681fd31480acc35e3f598b4f572ffa8be8dfefdca412103794652f84e69c9a4bc3cf9ee8659cd0d8ac1dd40c08cf5557837937e8d6336c6feffffff0248991600000000001976a91476ff4067bce12065d2d5a558b78d76f63e83d56888acc0590b27010000001976a9144dcdfa27f55c2ea07d01b3495a01391d42f60c9d88ac773900000200000002a53b252e65fd1433ca241d03250c38b308c541996128a3ccc7cc872355996f50000000006b483045022100b3e755a89b824561f9e387a5f184b157511a75a22453323b7e5622ba6c94e8ba022001ef2a1b66602548f8a8a43b6d89620e6a35bbb21c373e82f2de628716a522d1412103cebe8dcff2e107ff16267dd3074a792b300700e5008e441790e39a0428f08317feffffffdd1179179496b1aaecc30a75878a6fa6b1b338eaea23b4688c2f538c16f4a6ca010000006b4830450221008a25e84d42d4c2d3e226e16cf4149ac76f85d2181ccc07a6814e311d3e1a4e330220718264bbaccce910d9643a34110b19fdfe2e952ed2622fd02fc85f0366f04a4d412102d62958f9f264ff99460908a57b07a6a9ae1187e0848925c081b3ba2bceeaf59efeffffff028cff0a27010000001976a9145801335042eed7b156235017e3408f550f233a3888acfe3a9600000000001976a914c3fcc544d7cae7a954a044b5e559e17a3c156f2688ac77390000";
        byte[] bytes = DatatypeConverter.parseHexBinary(hex);

        //--- equihash TODO Spas change
        int n = 200;
        int k = 9;
        String p = "ZcashPoW";

        String headerHex = "0000002087b346fd7f72b054665dcfc1525c63fa26eea37d46e8a954f99cb922000000006e82f4b75982106a9ee75f11a515330cd9c76c9c4995849d2eca669a218abf4e58f80700000000000000000000000000000000000000000000000000000000007913c95a74782a1c";
        String nonceHex = "0000000000000000000000002a00e51951e5fd3f00000000000000003ffde552";
        String solutionHex = "00f7056790cee8f75745e83fcc5e0e2e3d801a234b0381431364c234d5a8efe1b1d974265ca997f99ca404e607cec4509b3eea584709895f014e4b0e35d93d07b7a51400485709bda75149e5131235555f0b74fa0928b0841747168bd14042b76dc48054f25696d6ed2bee73f2f4597d79b7b1c4b63c696ee1aef53496631abefb5d52d7b651f7f60894c564371ac9415acfa91f48bc195c9f0aafd28b67cd7f500adb2edcb9c7da0496f14bc90d628d1d6d12ae4b1f5a915fd35926a41baa1bec77645dd7c261259bbd36335f787e3d397a0dc990b5e451068f0ffab5ee77cf768dd77edb434b146b0cd0d0b3beebe957321eeec55bca47d69cda9d192368d9636c935fd9dd92160cd16af5b0b854e9a22f7d9cd4421c45cd29fdc904424fa65eae25963635221dcbbd7e1d79a7bbaf134be8fc854d592e0ba3a52bacde7887db12c5c7ef13c362b98b2a0106d011880375d89a7f5b6139c9b048c345f6ea02947696032427834ce666cf558491f4732313692cb8fbb73d4489173b12af0573a181ccbaa478f7f4f8b22d01ff8492278b4642ce0d3d4b99f075d405348272287ade728f07f0f9bcee68c6b7cef2335072d5aef2ad4d1ad95134a025848e1fff4d6d4e967451efbbca83b05d0511084c198a59955d45293814d7e9c9281173465fef210c11f3024bc8b409956a656d78c4cc9d8e711bb99505cd2ac3b40fbe6eabbd061627796dddd57f4f64b228c2125f8d5397ff26a8f698787501b1cd5d93013c0d91716e14999fd1f820f1ed3f4724528529b7eaa928496ebb70924813aac963236e7d7b0e11bcbc713d0a1cb50fb56d8213cad1e1bc307068bcbf32cb184418b010f5f4db94d135d063f01fd146d71c71f90bf514622b05cb26edf177bf0318ae9d419e79f05a13e727c21e371c1ecb43f9e8843eb1e560a6620d9a6fff016d6a19548a2bab668684e6a55b0836072bdb924a220f46b37c650b7ffdd008f878e29cba8ad2956cc30adc14c05f0cf91f274831142340f46334c2dd45ab0e44394791619f939caa010a617d47be3f0579fbf6047279d2a985373dd6a1328262199d3518869f28da44461460839b3dcd632615373051df92b1cef9f28d08e89a0c3f0b0b0fe577410998e70c8d79dbf6617539bcd6c798e126b3cfe66473ff2a1d31d78fb38faa019298c49b12fd6daf0632b2ba329f88ad8d2611852750e5bb5d1b1c33a41183edf6e1eb453b95d6151314bfeec8a0993a7d6bd90284db1d7f1577e310becf2de5432e71af411bb3ef28dc4b7b6932a8047eb03007713bdb2066179b557d53bff96a938d6ec2d06280224a0de42a1b8ac1fbafb2910afbc8d96723d7d9841e66db1bc46099c54debf6056ce174da1ae797a37c3356cb11549228ec9600c5130e33022646dc323b2a0208cb331a21bea5e545570f71f969e1d590d519971e346aa2e257b219123b8409f94f9d9e1e32f7ed2d1a3ebb994ecae3a8dc6693c43bad04cd6cb035ccd624c0cab0f61e55e591246bfb3cf8ac7f74cbdc580f12db11e1a5579d65e69cb260b2d6c66e797b9a24891d00f6fa89a08e33fc68780244c3fdcbc7fd3f89221d853c17df0c188f85eaca1967e6f7aed9843c78e63215524a60edafa7ca4847aefd63ea76468d74b89d0840e227ee4e7584e23cb426f2bcad6527ce7cf3fd0faa8a9fea094db5cb4e33af9e6c141d037f11d05515d8fb7a93dfd20d6a1ca6a19ffe1eea79353b406456413f9c7695cf9cf2fa9780b2e62182c20d3b4f421f3c559fcc95bfe2ce4ad316f03928094408ec8eb01f496e10f5d4088bb81e52f641a9d9cf201e39f5302d7f938d11f30bb1fccbe2e5c24313b24acb37c896776c953c1063416181342ec2dff9e60bc7fb9eb2e1";
        byte[] header = DatatypeConverter.parseHexBinary(headerHex);
        byte[] nonce = DatatypeConverter.parseHexBinary(nonceHex);
        byte[] solution = DatatypeConverter.parseHexBinary(solutionHex);

        // Act
        // TODO Spas Different ctors
        Equihash equihash = new Equihash(header, nonce, solution, n, k, p);
        boolean isValid = equihash.verify();

        // Assert
        assertTrue(isValid);
    }
}
